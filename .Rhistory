france_1280 <- mpd_France_1280[mpd_France_1280$year < 1280,]
#aonther round of subsetting for year until 1280
france_1280 <- mpd_France_1280[mpd_France_1280$year < 1281,]
france_1280
france_1280 %>%
mutate(lagy = lag(year), lagG = lag(gdppc), t = year - lagy, CAGR = (gdppc/lagG)^(1/t) -1)%>%
select(-lagy, -lagG, -t)
#aonther round of subsetting for year until 1280
france_1280 <- mpd_France_1280[1280 <= mpd_France_1280$year <= 2019,]
# Subsetting data limited to only France
France <- mpd[mpd$country == "France",]
#aonther round of subsetting for year until 1280
france_1280 <- France[France$year < 1281,]
france_1280 %>%
mutate(lagy = lag(year), lagG = lag(gdppc), t = year - lagy, CAGR = (gdppc/lagG)^(1/t) -1)%>%
select(-lagy, -lagG, -t)
#aonther round of subsetting for year until 1280
france_2018 <- France[France$year > 1280 & France$year < 2019]
#aonther round of subsetting for year until 1280
france_2018 <- France[France$year > 1280 & France$year < 2019,]
france_2018
france_2018 %>%
mutate(lagy = lag(year), lagG = lag(gdppc), t = year - lagy, CAGR = (gdppc/lagG)^(1/t) -1)%>%
select(-lagy, -lagG, -t)
#calculating the compound annual real GDP per capita growth (1 to 1280)
france_1280 %>%
mutate(lagy = lag(year), lagG = lag(gdppc), t = year - lagy, CAGR = (gdppc/lagG)^(1/t) -1)%>%
select(-lagy, -lagG, -t)
#calculating the compound annual real GDP per capita growth (1 to 1280)
cagr_f = france_1280 %>%
mutate(lagy = lag(year), lagG = lag(gdppc), t = year - lagy, CAGR = (gdppc/lagG)^(1/t) -1)%>%
select(-lagy, -lagG, -t)
#calculating the compound annual real GDP per capita growth (1 to 1280)
cagr_f = france_1280 %>%
mutate(lagy = lag(year), lagG = lag(gdppc), t = year - lagy, CAGR = (gdppc/lagG)^(1/t) -1)%>%
select(-lagy, -lagG, -t)
cagr_f
#calculating the compound annual real GDP per capita growth (1 to 1280)
cagr_f = france_1280 %>%
mutate(lagy = lag(year), lagG = lag(gdppc), t = year - lagy, CAGR = (gdppc/lagG)^(1/t) -1)%>%
select(-lagy, -lagG, -t)
cagr_f
c_growth = mean(cagr_f$CAGR, na.rm = TRUE)
#calculating the compound annual real GDP per capita growth (1 to 1280)
cagr_f = france_1280 %>%
mutate(lagy = lag(year), lagG = lag(gdppc), t = year - lagy, CAGR = (gdppc/lagG)^(1/t) -1)%>%
select(-lagy, -lagG, -t)
cagr_f
c_growth = mean(cagr_f$CAGR, na.rm = TRUE)
c_growth
#calculating the compound annual real GDP per capita growth (1 to 1280)
cagr_f = france_1280 %>%
mutate(lagy = lag(year), lagG = lag(gdppc), t = year - lagy, CAGR = (gdppc/lagG)^(1/t) -1)%>%
select(-lagy, -lagG, -t)
cagr_f
c_growth = mean(cagr_f$CAGR, na.rm = TRUE)
c_growth
cagr_f_2 = france_2018 %>%
mutate(lagy = lag(year), lagG = lag(gdppc), t = year - lagy, CAGR = (gdppc/lagG)^(1/t) -1)%>%
select(-lagy, -lagG, -t)
f_growth = mean(cagr_f_2$CAGR, na.rm = TRUE)
f_growth
cagr_f_2
cagr_f = france_1280 %>%
mutate(lagy = lag(year), lagG = lag(gdppc), t = year - lagy, CAGR = (gdppc/lagG)^(1/t) -1)%>%
select(-lagy, -lagG, -t)
cagr_f
cagr_f_2 = france_2018 %>%
mutate(lagy = lag(year), lagG = lag(gdppc), t = year - lagy, CAGR = (gdppc/lagG)^(1/t) -1)%>%
select(-lagy, -lagG, -t)
f_growth = mean(cagr_f_2$CAGR, na.omit = TRUE)
f_growth
cagr_f_2 = france_2018 %>%
mutate(lagy = lag(year), lagG = lag(gdppc), t = year - lagy, CAGR = (gdppc/lagG)^(1/t) -1)%>%
select(-lagy, -lagG, -t)
f_growth = mean(cagr_f_2$CAGR, na.rm = TRUE)
f_growth
f_growth
cagr_f_2 = france_2018 %>%
mutate(lagy = lag(year), lagG = lag(gdppc), t = year - lagy, CAGR = (gdppc/lagG)^(1/t) -1)%>%
select(-lagy, -lagG, -t)
cagr_f_2
#now the average
f_growth = mean(cagr_f_2$CAGR, na.rm = TRUE)
f_growth
cagr_f_2 = france_2018 %>%
mutate(lagy = lag(year), lagG = lag(gdppc), t = year - lagy, CAGR = (gdppc/lagG)^(1/t) -1)%>%
select(-lagy, -lagG, -t)
#now the average
f_growth = mean(cagr_f_2$CAGR, na.rm = TRUE)
f_growth
#calculating the compound annual real GDP per capita growth (1 to 1280)
cagr_f = france_1280 %>%
mutate(lagy = lag(year), lagG = lag(gdppc), t = year - lagy, CAGR = (gdppc/lagG)^(1/t) -1)%>%
select(-lagy, -lagG, -t)
cagr_f
c_growth = mean(cagr_f$CAGR, na.rm = TRUE)
c_growth
library(tinytex)
France
France[France$year == 2018]
France[France$year == 2018,]
f_growth
knit_with_parameters("A:/Göttingen/WiSe_2021/Dev_Econ_I/PS4/PS4_i_tried.Rmd", encoding = "UTF-8")
remotes::install_github("rstudio/reticulate")
library(reticulate)
install_minicond
remotes::install_github("rstudio/reticulate")
library(reticulate)
install_miniconda
remotes::install_github("rstudio/reticulate")
install.packages("remotes")
remotes::install_github("rstudio/reticulate")
library(reticulate)
install_miniconda
install_miniconda()
install.packages("pandas")
getwd()
knitr::opts_chunk$set(echo = TRUE)
setwd("A:/Göttingen/SoSe_2022/Econometrics II/R Sessions")
random_walks <- function(N=25, Rep=1000, verbose=TRUE){
# create an empty vector for the results
results <- rep(0, times=Rep)
# loop: Rep times (from 1 to Rep)
for(i in 1:Rep){
# create a normally distributed random vector x with N entries
x <- cumsum(rnorm(N))
# create a normally distributed random vector y with N entries
y <- cumsum(rnorm(N))
# run regression, and write the 4th entry (p-value) of the 2nd estimator (b2) into vector results
results[i] <- summary(lm(y ~ x))$coefficients[2, 4]
}
print(paste0("1% level: ", sum(results < 0.01) / Rep)) # print share of runs whose p < 0.01
print(paste0("5% level: ", sum(results < 0.05) / Rep))  # print share of runs whose p < 0.05
print(paste0("10% level: ", sum(results < 0.1) / Rep)) # print share of runs whose p < 0.1
if(verbose){
plot(x = 1:N,
y = x,
xlab = "t",
ylim = c(min(x,y), max(x,y)),
ylab = "",
type = "l")
lines(x = 1:N,
y = y,
col = "red")
legend("topleft",
legend = c("x", "y"),
col = c("black", "red"),
pch = "l")
}
return(results)
}
set.seed(1234)
p_25obs <- random_walks()
# T = 100
set.seed(1234)
p_100obs <- random_walks(N=100)
# T = 500
set.seed(1234)
p_500obs <- random_walks(N=500)
punjab
rm(list = ls())
getwd()
setwd("A:/Datasets/Data Cleaning")
library(tidyverse)
library(mice)
set.seed(5)
punjab_data2 <- read_csv("gdp_Punjab2.csv")
austin_pet <- read_csv("aac_shelter_outcomes.csv")
# Play with punjab dataset
View(punjab_data2) # Bunch of missing values for this one
str(punjab_data2)
head(punjab_data2)
View(austin_pet) # huge data with 78256 observations and 12 variable
austin_pet$name[[100]]
head(punjab_data2
head(punjab_data2)
head(punjab_data2)
pun_growth(head)
head(pun_growth)
pun_gdp <- punjab_data2 %>%
filter(Description == 'GDP (in Rs. Cr.)')
pun_growth <- punjab_data2 %>%
filter(Description == 'Growth Rate % (YoY)')
head(pun_growth)
pun_growth(head)
head(pun_growth)
getwd()
head(pun_growth)
head(pun_growth)
pun_gdp
missing_by_column <- pun_gdp %>%
is.na %>%
as_data_frame %>%
mutate(row_number = 1:nrow(.)) %>%
gather(variable, is_missing, -row_number)
missing_by_column <- pun_gdp %>%
is.na %>%   # check if each cell is na
as_data_frame %>%  # Converstion to data-frame
mutate(row_number = 1:nrow(.)) %>% #add a column with the row number
gather(variable, is_missing, -row_number)
library(tidyverse)
library(mice)
set.seed(5)
missing_by_column <- pun_gdp %>%
is.na %>%   # check if each cell is na
as_data_frame %>%  # Converstion to data-frame
mutate(row_number = 1:nrow(.)) %>% #add a column with the row number
gather(variable, is_missing, -row_number)
missing_by_column <- pun_gdp %>%
is.na %>%   # check if each cell is na
as_tibble() %>%  # Converstion to data-frame
mutate(row_number = 1:nrow(.)) %>% #add a column with the row number
gather(variable, is_missing, -row_number)
missing_by_column
View(missing_by_column)
tibble?
?tibble()
ggplot(missing_by_column, aes(x = variable, y = row_number,
fill = is_missing)) + geom_tile() + theme_minimal() +
scale_fill_grey(name = "", labels = c("Present", "Missing")) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, size = 8)) +
labs(x = "Variables in Dataset", y = "Rows/observations")
ggplot(missing_by_column, aes(x = variable, y = row_number,
fill = is_missing)) + geom_tile() + theme_minimal() +
scale_fill_gradient(name = "", labels = c("Present", "Missing")) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, size = 8)) +
labs(x = "Variables in Dataset", y = "Rows/observations")
ggplot(missing_by_column, aes(x = variable, y = row_number,
fill = is_missing)) + geom_tile() + theme_minimal() +
scale_fill_greyt(name = "", labels = c("Present", "Missing")) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, size = 8)) +
labs(x = "Variables in Dataset", y = "Rows/observations")
ggplot(missing_by_column, aes(x = variable, y = row_number,
fill = is_missing)) + geom_tile() + theme_minimal() +
scale_fill_grey(name = "", labels = c("Present", "Missing")) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, size = 8)) +
labs(x = "Variables in Dataset", y = "Rows/observations")
ggplot(missing_by_column, aes(x = variable, y = row_number,
fill = is_missing)) + geom_tile() + theme_minimal() +
scale_fill_grey(name = "", labels = c("Present", "Missing")) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, size = 8)) +
labs(x = "Variables in Dataset", y = "Rows/observations")
pun_growth
pun_gdp
pun_growth
missin_by_col <- pun_growth %>%
as_tibble() %>%
mutate(row_number = 1:nrow(.)) %>%
missin_by_col <- pun_growth %>%
as_tibble() %>%
mutate(row_number = 1:nrow(.))
missin_by_col <- pun_growth %>%
is.na %>%
as_tibble() %>%
mutate(row_number = 1:nrow(.))
missin_by_col
pun_growth
View(pun_growth)
View(missin_by_col)
missing_by_col <- pun_growth %>%
is.na %>%
as_tibble() %>%
mutate(row_number = 1:nrow(.)) %>%
gather(variable, is_missing, -row_number)
View(missing_by_col)
missing_by_col <- pun_growth %>%
is.na %>%
as_tibble() %>% # Converstion to data-frame
mutate(row_number = 1:nrow(.)) %>% # add a clumn with the row number
gather(variable, -is_missing, row_number) # Conversion of wide data to narrow
missing_by_col <- pun_growth %>%
is.na %>%
as_tibble() %>% # Converstion to data-frame
mutate(row_number = 1:nrow(.)) %>% # add a clumn with the row number
gather(variable, is_missing, row_number)
missing_by_col
missing_by_col <- pun_growth %>%
is.na %>%
as_tibble() %>% # Converstion to data-frame
mutate(row_number = 1:nrow(.)) %>% # add a clumn with the row number
gather(variable, is_missing, row_number) # Conversion of wide data to narrow
missing_by_col
View(missing_by_col)
missing_by_col <- pun_growth %>%
is.na %>%
as_tibble() %>% # Converstion to data-frame
mutate(row_number = 1:nrow(.)) %>% # add a clumn with the row number
gather(variable, is_missing, -row_number) # Conversion of wide data to narrow
ggplot(missing_by_col, aes(x = variable, y = row_number, fill = is_missing ))
+ geom_tile() + theme_minimal() + scale_fill_grey(name = "", labels =
c("Present", "Missing")) + theme(axis.text.x =  element_text(angle = 45, vjust
= 0.5, size = 8)) + labs(x = "Variables in Dataset", y = "Rows/obs")
missing_by_col
ggplot(missing_by_col, aes(x = variable, y = row_number, fill = is_missing ))
+ geom_tile() + theme_minimal() + scale_fill_grey(name = "", labels =
c("Present", "Missing")) + theme(axis.text.x =  element_text(angle = 45, vjust
= 0.5, size = 8)) + labs(x = "Variables in Dataset", y = "Rows/obs")
missing_by_col <- pun_growth %>%
is.na %>%
as_tibble() %>% # Converstion to data-frame
mutate(row_number = 1:nrow(.)) %>% # add a clumn with the row number
gather(variable, is_missing, -row_number) # Conversion of wide data to narrow
missin_by_col
missing_by_col <- pun_growth %>%
is.na %>%
as_tibble() %>% # Converstion to data-frame
mutate(row_number = 1:nrow(.)) %>% # add a clumn with the row number
gather(variable, is_missing, -row_number)
missin_by_col
missing_by_col
ggplot(missing_by_column, aes(x = variable, y = row_number,
fill = is_missing)) + geom_tile() + theme_minimal() +
scale_fill_grey(name = "", labels = c("Present", "Missing")) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, size = 8)) +
labs(x = "Variables in Dataset", y = "Rows/observations")
ggplot(missing_by_col, aes(x = variable, y = row_number, fill = is_missing ))
+ geom_tile() + theme_minimal() + scale_fill_grey(name = "", labels =
c("Present", "Missing")) + theme(axis.text.x =  element_text(angle = 45, vjust
= 0.5, size = 8)) + labs(x = "Variables in Dataset", y = "Rows/obs")
ggplot(missing_by_col, aes(x = variable, y = row_number,
fill = is_missing)) + geom_tile() + theme_minimal() +
scale_fill_grey(name = "", labels = c("Present", "Missing")) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, size = 8)) +
labs(x = "Variables in Dataset", y = "Rows/observations")
getwd()
library(tidyverse)
library(mice)  # package for categorical and numeric imputations
### Other ways of plotting missing values
library(naniar)
library(visdat)
set.seed(5)
empty_model_gdp <- mice(pun_gdp, maxit = 0)
View(pun_gdp)
empty_model_gdp <- mice(pun_gdp, maxit = 0)
empty_model_gdp <- mice(pun_gdp, maxit = 0)
method <- empty_model_gdp$method
predictorMatrix <- empty_model$predictorMatrix
empty_model_gdp <- mice(pun_gdp, maxit = 0)
method <- empty_model_gdp$method
predictorMatrix <- empty_model_gdp$predictorMatrix
punjab_data2 %>%
rename(
Fatehgarh Sahib = Fatehgarh_sahib
)
punjab_data2 %>%
rename(
'Fatehgarh Sahib' = 'Fatehgarh_sahib'
)
View(punjab_data2)
punjab_data2
View(punjab_data2)
punjab_data2 %>%
rename(
'Fatehgarh Sahib' = Fatehgarh_sahib
)
punjab_data2 %>%
rename(
'Fatehgarh_Sahib' = Fatehgarh_sahib
)
punjab_data2 %>%
rename(
'Fatehgarh_sahib' = Fatehgarh_sahib
)
punjab_data2[["Fatehgarh Sahib"]]
punjab_data2 %>%
rename(
Fatehgarh Sahib = Fatehgarh_sahib
)
punjab_data2 %>%
rename(Fatehgarh Sahib = Fatehgarh_sahib)
library(tidyverse)
punjab_data2 %>%
rename(Fatehgarh Sahib = Fatehgarh_sahib)
library(dplyr)
punjab_data2 %>%
rename(Fatehgarh Sahib = Fatehgarh_sahib)
colnames(punjab_data2)
names(punjab_data2)[7] <- "Fatehgarh_sahib"
colnames(punjab_data2)
names(punjab_data2)[19] <- "Sahibzaha_ajit_singh_nagar"
names(punjab_data2)[21] <- "Sahid_bhagat_singh_nagar"
names(punjab_data2)[22] <- "Taran_tarn"
colnames(punjab_data2)
View(punjab_data2)
pun_gdp <- punjab_data2 %>%
filter(Description == 'GDP (in Rs. Cr.)')
pun_growth <- punjab_data2 %>%
filter(Description == 'Growth Rate % (YoY)')
pun_growth
## First create an empty model
empty_model_gdp <- mice(pun_gdp, maxit = 0)
method <- empty_model_gdp$method
predictorMatrix <- empty_model_gdp$predictorMatrix
View(empty_model_gdp)
names(punjab_data2)[7] <- "Fatehgarh_sahib"
names(punjab_data2)[19] <- "Sahibzaha_ajit_singh_nagar"
names(punjab_data2)[21] <- "Sahid_bhagat_singh_nagar"
names(punjab_data2)[22] <- "Taran_tarn"
names(punjab_data2)[7] <- "Fatehgarh_sahib"
names(punjab_data2)[19] <- "Sahibzaha_ajit_singh_nagar"
names(punjab_data2)[21] <- "Sahid_bhagat_singh_nagar"
names(punjab_data2)[22] <- "Taran_tarn"
View(empty_model_gdp)
imputed_data <- complete(imputed_data)
imputed_data <- mice(pun_gdp,
method, predictorMatr
imputed_data <- mice(pun_gdp,
method, predictorMatrix, m =
imputed_data
imputed_data <- mice(pun_gdp, method, predictorMatrix, m = 5)
# then pick one for each variable
imputed_data <- complete(imputed_data)
imputed_data
head(imputed_data)
head(imputed_data)
head(pun_gdp)
empty_model_gdp <- mice(pun_gdp, maxit = 0)
method <- empty_model_gdp$method
predictorMatrix <- empty_model_gdp$predictorMatrix
imputed_data <- mice(pun_gdp, method, predictorMatrix, m = 5)
# then pick one for each variable
imputed_data <- complete(imputed_data)
head(imputed_data)
method
imputed_data <- complete(imputed_data)
imputed_data
imputed_data <- mice(pun_gdp, method, predictorMatrix, m = 5)
imputed_data <- complete(imputed_data)
head(imputed_data)
pun_growth   # Seems lots of missing data, mal schauen
missing_by_col <- pun_growth %>%
is.na %>%
as_tibble() %>% # Converstion to data-frame
mutate(row_number = 1:nrow(.)) %>% # add a clumn with the row number
gather(variable, is_missing, -row_number) # Conversion of wide data to narrow
### Plot the missing values in our pun_grwoth data frame
ggplot(missing_by_col, aes(x = variable, y = row_number,
fill = is_missing)) + geom_tile() + theme_minimal() +
scale_fill_grey(name = "", labels = c("Present", "Missing")) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, size = 8)) +
labs(x = "Variables in Dataset", y = "Rows/observations")
head(gdp_growth)
head(pun_growth)
library(mice)
View(pun_growth)
# Initialize an empty model to take the parameters from
empty <- mice(pun_growth, maxit = 0)
method <- empty$method
predictMatrix <- empty$predictMatrix
# first make a bunch of guess
imputed <- mice(pun_growth, method, predictMatrix, m = 5)
empty <- mice(pun_growth, maxit = 0)
method <- empty$method
predictMatrix <- empty$predictMatrix
# first make a bunch of guess
imputed <- mice(pun_growth, method, predictMatrix, m =
empty <- mice(pun_growth, maxit = 0)
method <- empty$method
predictMatrix <- empty$predictMatrix
# first make a bunch of guess
imputed <- mice(pun_growth, method, predictMatrix, m = 5)
imputed <- complte(imputed)
imputed <- complete(imputed)
imputed <- mice(pun_growth, method, predictMatrix, m = 5)
empty <- mice(pun_growth, maxit = 0)
method <- empty$method
predictMatrix <- empty$predictMatrix
imputed <- mice(pun_growth, method, predictMatrix, m = 5)
imputed <- complete(imputed)
empty <- mice(pun_growth, maxit = 0)
method <- empty$method
predictorMatrix <- empty$predictorMatrix
# first make a bunch of guess
imputed <- mice(pun_growth, method, predictorMatrix, m = 5)
# then pick one for each var
imputed <- complete(imputed)
head(empty)
head(imputed)
pun_gdp
empty_model_gdp <- mice(pun_gdp, maxit = 0)
method <- empty_model_gdp$method
predictorMatrix <- empty_model_gdp$predictorMatrix
imputed_data <- mice(pun_gdp, method, predictorMatrix, m = 5)
imputed_data <- complete(imputed_data)
head(imputed_data)
## Against trying to create an empty model
empty_model <- mice(pun_gdp, maxit = 0)
method <- empty_model$method
predictorMatrix <- empty_model_gdp$predictorMatrix
head(pun_growth)
empty <- mice(pun_growth, maxit = 0)
method <- empty$method
predictorMatrix <- empty$predictorMatrix
imputed <- mice(pun_growth, method, predictorMatrix, m = 5)
imputed <- complete(imputed)
head(imputed)
pun_gdp
vis_dat(punjab_data2)
vis_miss(punjab_data2)
gg_miss_var(punjab_data2)
gg_miss_var(pun_gdp)
gg_miss_var(imputed_data)
gg_miss_var(pun_growth)
gg_miss_var(imputed
gg_miss_var(imputed)
gg_miss_var(imputed)
rm(list=ls())
clearPushBack()
clear()
quit
quit()
